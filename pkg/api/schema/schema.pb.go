//
//Copyright (C) 2020 The Falco Authors.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.15.8
// source: schema.proto

package schema

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Priority int32

const (
	Priority_EMERGENCY     Priority = 0
	Priority_emergency     Priority = 0
	Priority_Emergency     Priority = 0
	Priority_ALERT         Priority = 1
	Priority_alert         Priority = 1
	Priority_Alert         Priority = 1
	Priority_CRITICAL      Priority = 2
	Priority_critical      Priority = 2
	Priority_Critical      Priority = 2
	Priority_ERROR         Priority = 3
	Priority_error         Priority = 3
	Priority_Error         Priority = 3
	Priority_WARNING       Priority = 4
	Priority_warning       Priority = 4
	Priority_Warning       Priority = 4
	Priority_NOTICE        Priority = 5
	Priority_notice        Priority = 5
	Priority_Notice        Priority = 5
	Priority_INFORMATIONAL Priority = 6
	Priority_informational Priority = 6
	Priority_Informational Priority = 6
	Priority_DEBUG         Priority = 7
	Priority_debug         Priority = 7
	Priority_Debug         Priority = 7
)

// Enum value maps for Priority.
var (
	Priority_name = map[int32]string{
		0: "EMERGENCY",
		// Duplicate value: 0: "emergency",
		// Duplicate value: 0: "Emergency",
		1: "ALERT",
		// Duplicate value: 1: "alert",
		// Duplicate value: 1: "Alert",
		2: "CRITICAL",
		// Duplicate value: 2: "critical",
		// Duplicate value: 2: "Critical",
		3: "ERROR",
		// Duplicate value: 3: "error",
		// Duplicate value: 3: "Error",
		4: "WARNING",
		// Duplicate value: 4: "warning",
		// Duplicate value: 4: "Warning",
		5: "NOTICE",
		// Duplicate value: 5: "notice",
		// Duplicate value: 5: "Notice",
		6: "INFORMATIONAL",
		// Duplicate value: 6: "informational",
		// Duplicate value: 6: "Informational",
		7: "DEBUG",
		// Duplicate value: 7: "debug",
		// Duplicate value: 7: "Debug",
	}
	Priority_value = map[string]int32{
		"EMERGENCY":     0,
		"emergency":     0,
		"Emergency":     0,
		"ALERT":         1,
		"alert":         1,
		"Alert":         1,
		"CRITICAL":      2,
		"critical":      2,
		"Critical":      2,
		"ERROR":         3,
		"error":         3,
		"Error":         3,
		"WARNING":       4,
		"warning":       4,
		"Warning":       4,
		"NOTICE":        5,
		"notice":        5,
		"Notice":        5,
		"INFORMATIONAL": 6,
		"informational": 6,
		"Informational": 6,
		"DEBUG":         7,
		"debug":         7,
		"Debug":         7,
	}
)

func (x Priority) Enum() *Priority {
	p := new(Priority)
	*p = x
	return p
}

func (x Priority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Priority) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_proto_enumTypes[0].Descriptor()
}

func (Priority) Type() protoreflect.EnumType {
	return &file_schema_proto_enumTypes[0]
}

func (x Priority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Priority.Descriptor instead.
func (Priority) EnumDescriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{0}
}

type Source int32

const (
	Source_SYSCALL   Source = 0
	Source_syscall   Source = 0
	Source_Syscall   Source = 0
	Source_K8S_AUDIT Source = 1
	Source_k8s_audit Source = 1
	Source_K8s_audit Source = 1
	Source_K8S_audit Source = 1
	Source_INTERNAL  Source = 2
	Source_internal  Source = 2
	Source_Internal  Source = 2
	Source_PLUGIN    Source = 3
	Source_plugin    Source = 3
	Source_Plugin    Source = 3
)

// Enum value maps for Source.
var (
	Source_name = map[int32]string{
		0: "SYSCALL",
		// Duplicate value: 0: "syscall",
		// Duplicate value: 0: "Syscall",
		1: "K8S_AUDIT",
		// Duplicate value: 1: "k8s_audit",
		// Duplicate value: 1: "K8s_audit",
		// Duplicate value: 1: "K8S_audit",
		2: "INTERNAL",
		// Duplicate value: 2: "internal",
		// Duplicate value: 2: "Internal",
		3: "PLUGIN",
		// Duplicate value: 3: "plugin",
		// Duplicate value: 3: "Plugin",
	}
	Source_value = map[string]int32{
		"SYSCALL":   0,
		"syscall":   0,
		"Syscall":   0,
		"K8S_AUDIT": 1,
		"k8s_audit": 1,
		"K8s_audit": 1,
		"K8S_audit": 1,
		"INTERNAL":  2,
		"internal":  2,
		"Internal":  2,
		"PLUGIN":    3,
		"plugin":    3,
		"Plugin":    3,
	}
)

func (x Source) Enum() *Source {
	p := new(Source)
	*p = x
	return p
}

func (x Source) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Source) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_proto_enumTypes[1].Descriptor()
}

func (Source) Type() protoreflect.EnumType {
	return &file_schema_proto_enumTypes[1]
}

func (x Source) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Source.Descriptor instead.
func (Source) EnumDescriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{1}
}

var File_schema_proto protoreflect.FileDescriptor

var file_schema_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x66, 0x61, 0x6c, 0x63, 0x6f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2a, 0xcc, 0x02, 0x0a,
	0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x4d, 0x45,
	0x52, 0x47, 0x45, 0x4e, 0x43, 0x59, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x65, 0x6d, 0x65, 0x72,
	0x67, 0x65, 0x6e, 0x63, 0x79, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x6d, 0x65, 0x72, 0x67,
	0x65, 0x6e, 0x63, 0x79, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x10,
	0x01, 0x12, 0x09, 0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x52, 0x49, 0x54, 0x49,
	0x43, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x10,
	0x02, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12,
	0x0b, 0x0a, 0x07, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07,
	0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x54,
	0x49, 0x43, 0x45, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x10,
	0x05, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x10, 0x05, 0x12, 0x11, 0x0a,
	0x0d, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x10, 0x06,
	0x12, 0x11, 0x0a, 0x0d, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x45, 0x42, 0x55, 0x47, 0x10,
	0x07, 0x12, 0x09, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x10, 0x07, 0x12, 0x09, 0x0a, 0x05,
	0x44, 0x65, 0x62, 0x75, 0x67, 0x10, 0x07, 0x1a, 0x02, 0x10, 0x01, 0x2a, 0xbd, 0x01, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x59, 0x53, 0x43, 0x41, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x73, 0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x4b, 0x38, 0x53, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x54, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x6b, 0x38, 0x73, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4b,
	0x38, 0x73, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4b, 0x38,
	0x53, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x4c, 0x55, 0x47, 0x49, 0x4e, 0x10, 0x03, 0x12,
	0x0a, 0x0a, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x10, 0x03, 0x1a, 0x02, 0x10, 0x01, 0x42, 0x33, 0x5a, 0x31, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x61, 0x6c, 0x63, 0x6f, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2d, 0x67,
	0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_schema_proto_rawDescOnce sync.Once
	file_schema_proto_rawDescData = file_schema_proto_rawDesc
)

func file_schema_proto_rawDescGZIP() []byte {
	file_schema_proto_rawDescOnce.Do(func() {
		file_schema_proto_rawDescData = protoimpl.X.CompressGZIP(file_schema_proto_rawDescData)
	})
	return file_schema_proto_rawDescData
}

var file_schema_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_schema_proto_goTypes = []interface{}{
	(Priority)(0), // 0: falco.schema.priority
	(Source)(0),   // 1: falco.schema.source
}
var file_schema_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_schema_proto_init() }
func file_schema_proto_init() {
	if File_schema_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_schema_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_schema_proto_goTypes,
		DependencyIndexes: file_schema_proto_depIdxs,
		EnumInfos:         file_schema_proto_enumTypes,
	}.Build()
	File_schema_proto = out.File
	file_schema_proto_rawDesc = nil
	file_schema_proto_goTypes = nil
	file_schema_proto_depIdxs = nil
}
