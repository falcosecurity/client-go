// Code generated by protoc-gen-go. DO NOT EDIT.
// source: falco_output.proto

package output

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Priority int32

const (
	Priority_EMERGENCY     Priority = 0
	Priority_ALERT         Priority = 1
	Priority_CRITICAL      Priority = 2
	Priority_ERROR         Priority = 3
	Priority_WARNING       Priority = 4
	Priority_NOTICE        Priority = 5
	Priority_INFORMATIONAL Priority = 6
	Priority_DEBUG         Priority = 7
)

var Priority_name = map[int32]string{
	0: "EMERGENCY",
	1: "ALERT",
	2: "CRITICAL",
	3: "ERROR",
	4: "WARNING",
	5: "NOTICE",
	6: "INFORMATIONAL",
	7: "DEBUG",
}

var Priority_value = map[string]int32{
	"EMERGENCY":     0,
	"ALERT":         1,
	"CRITICAL":      2,
	"ERROR":         3,
	"WARNING":       4,
	"NOTICE":        5,
	"INFORMATIONAL": 6,
	"DEBUG":         7,
}

func (x Priority) String() string {
	return proto.EnumName(Priority_name, int32(x))
}

func (Priority) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0087b3f605d16fd1, []int{0}
}

type Source int32

const (
	Source_SYSCALL   Source = 0
	Source_K8S_AUDIT Source = 1
)

var Source_name = map[int32]string{
	0: "SYSCALL",
	1: "K8S_AUDIT",
}

var Source_value = map[string]int32{
	"SYSCALL":   0,
	"K8S_AUDIT": 1,
}

func (x Source) String() string {
	return proto.EnumName(Source_name, int32(x))
}

func (Source) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0087b3f605d16fd1, []int{1}
}

type FalcoOutputRequest struct {
	Duration             string   `protobuf:"bytes,1,opt,name=duration,proto3" json:"duration,omitempty"`
	Keepalive            bool     `protobuf:"varint,2,opt,name=keepalive,proto3" json:"keepalive,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FalcoOutputRequest) Reset()         { *m = FalcoOutputRequest{} }
func (m *FalcoOutputRequest) String() string { return proto.CompactTextString(m) }
func (*FalcoOutputRequest) ProtoMessage()    {}
func (*FalcoOutputRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0087b3f605d16fd1, []int{0}
}

func (m *FalcoOutputRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FalcoOutputRequest.Unmarshal(m, b)
}
func (m *FalcoOutputRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FalcoOutputRequest.Marshal(b, m, deterministic)
}
func (m *FalcoOutputRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FalcoOutputRequest.Merge(m, src)
}
func (m *FalcoOutputRequest) XXX_Size() int {
	return xxx_messageInfo_FalcoOutputRequest.Size(m)
}
func (m *FalcoOutputRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FalcoOutputRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FalcoOutputRequest proto.InternalMessageInfo

func (m *FalcoOutputRequest) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *FalcoOutputRequest) GetKeepalive() bool {
	if m != nil {
		return m.Keepalive
	}
	return false
}

type FalcoOutputResponse struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Priority             Priority             `protobuf:"varint,3,opt,name=priority,proto3,enum=Priority" json:"priority,omitempty"`
	Source               Source               `protobuf:"varint,4,opt,name=source,proto3,enum=Source" json:"source,omitempty"`
	Rule                 string               `protobuf:"bytes,5,opt,name=rule,proto3" json:"rule,omitempty"`
	Output               string               `protobuf:"bytes,6,opt,name=output,proto3" json:"output,omitempty"`
	OutputFields         map[string]string    `protobuf:"bytes,7,rep,name=output_fields,json=outputFields,proto3" json:"output_fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FalcoOutputResponse) Reset()         { *m = FalcoOutputResponse{} }
func (m *FalcoOutputResponse) String() string { return proto.CompactTextString(m) }
func (*FalcoOutputResponse) ProtoMessage()    {}
func (*FalcoOutputResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0087b3f605d16fd1, []int{1}
}

func (m *FalcoOutputResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FalcoOutputResponse.Unmarshal(m, b)
}
func (m *FalcoOutputResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FalcoOutputResponse.Marshal(b, m, deterministic)
}
func (m *FalcoOutputResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FalcoOutputResponse.Merge(m, src)
}
func (m *FalcoOutputResponse) XXX_Size() int {
	return xxx_messageInfo_FalcoOutputResponse.Size(m)
}
func (m *FalcoOutputResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FalcoOutputResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FalcoOutputResponse proto.InternalMessageInfo

func (m *FalcoOutputResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FalcoOutputResponse) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *FalcoOutputResponse) GetPriority() Priority {
	if m != nil {
		return m.Priority
	}
	return Priority_EMERGENCY
}

func (m *FalcoOutputResponse) GetSource() Source {
	if m != nil {
		return m.Source
	}
	return Source_SYSCALL
}

func (m *FalcoOutputResponse) GetRule() string {
	if m != nil {
		return m.Rule
	}
	return ""
}

func (m *FalcoOutputResponse) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func (m *FalcoOutputResponse) GetOutputFields() map[string]string {
	if m != nil {
		return m.OutputFields
	}
	return nil
}

func init() {
	proto.RegisterEnum("Priority", Priority_name, Priority_value)
	proto.RegisterEnum("Source", Source_name, Source_value)
	proto.RegisterType((*FalcoOutputRequest)(nil), "falco_output_request")
	proto.RegisterType((*FalcoOutputResponse)(nil), "falco_output_response")
	proto.RegisterMapType((map[string]string)(nil), "falco_output_response.OutputFieldsEntry")
}

func init() { proto.RegisterFile("falco_output.proto", fileDescriptor_0087b3f605d16fd1) }

var fileDescriptor_0087b3f605d16fd1 = []byte{
	// 463 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x52, 0x5d, 0x6b, 0xdb, 0x30,
	0x14, 0xad, 0x9d, 0xc4, 0x89, 0x6f, 0x9b, 0xa2, 0x5e, 0xda, 0x62, 0xc2, 0xa0, 0xa1, 0x6c, 0x10,
	0xfa, 0xa0, 0x8e, 0xec, 0xa5, 0x8c, 0xc1, 0xf0, 0x52, 0x37, 0x98, 0x25, 0xce, 0x50, 0x5c, 0x46,
	0x9f, 0x42, 0x3e, 0x94, 0x22, 0xea, 0x46, 0x9e, 0x2c, 0x07, 0xf2, 0x5b, 0xf7, 0x67, 0x86, 0xe5,
	0xa4, 0x2d, 0x5d, 0xde, 0x74, 0x8e, 0xce, 0x3d, 0x9c, 0x7b, 0xb8, 0x80, 0xcb, 0x69, 0x32, 0x97,
	0x13, 0x99, 0xeb, 0x34, 0xd7, 0x34, 0x55, 0x52, 0xcb, 0xd6, 0xc5, 0xa3, 0x94, 0x8f, 0x09, 0xbf,
	0x36, 0x68, 0x96, 0x2f, 0xaf, 0xb5, 0x78, 0xe6, 0x99, 0x9e, 0x3e, 0xa7, 0xa5, 0xe0, 0xf2, 0x17,
	0x9c, 0xbe, 0x1d, 0x9b, 0x28, 0xfe, 0x27, 0xe7, 0x99, 0xc6, 0x16, 0x34, 0x16, 0xb9, 0x9a, 0x6a,
	0x21, 0x57, 0x9e, 0xd5, 0xb6, 0x3a, 0x2e, 0x7b, 0xc1, 0xf8, 0x01, 0xdc, 0x27, 0xce, 0xd3, 0x69,
	0x22, 0xd6, 0xdc, 0xb3, 0xdb, 0x56, 0xa7, 0xc1, 0x5e, 0x89, 0xcb, 0xbf, 0x36, 0x9c, 0xbd, 0xb3,
	0xcc, 0x52, 0xb9, 0xca, 0x38, 0x1e, 0x83, 0x2d, 0x16, 0x5b, 0x37, 0x5b, 0x2c, 0x90, 0x42, 0xb5,
	0x88, 0x63, 0x2c, 0x0e, 0xbb, 0x2d, 0x5a, 0x66, 0xa5, 0xbb, 0xac, 0x34, 0xde, 0x65, 0x65, 0x46,
	0x87, 0x9f, 0xa0, 0x91, 0x2a, 0x21, 0x95, 0xd0, 0x1b, 0xaf, 0xd2, 0xb6, 0x3a, 0xc7, 0x5d, 0x97,
	0xee, 0x08, 0xf6, 0xf2, 0x85, 0x17, 0xe0, 0x64, 0x32, 0x57, 0x73, 0xee, 0x55, 0x8d, 0xa8, 0x4e,
	0x4b, 0xc8, 0xb6, 0x34, 0x22, 0x54, 0x55, 0x9e, 0x70, 0xaf, 0x66, 0x92, 0x98, 0x37, 0x9e, 0x83,
	0x53, 0xc6, 0xf5, 0x1c, 0xc3, 0x6e, 0x11, 0x0e, 0xa1, 0xb9, 0x5d, 0x63, 0x29, 0x78, 0xb2, 0xc8,
	0xbc, 0x7a, 0xbb, 0xd2, 0x39, 0xec, 0x76, 0xe8, 0xde, 0x15, 0xe9, 0xc8, 0xe0, 0x3b, 0x23, 0x0d,
	0x56, 0x5a, 0x6d, 0xd8, 0x91, 0x7c, 0x43, 0xb5, 0xbe, 0xc3, 0xc9, 0x7f, 0x12, 0x24, 0x50, 0x79,
	0xe2, 0x9b, 0x6d, 0x31, 0xc5, 0x13, 0x4f, 0xa1, 0xb6, 0x9e, 0x26, 0x79, 0x59, 0x8d, 0xcb, 0x4a,
	0xf0, 0xd5, 0xbe, 0xb1, 0xae, 0xf4, 0x6b, 0x07, 0xd8, 0x04, 0x37, 0x18, 0x06, 0xac, 0x1f, 0x44,
	0xbd, 0x07, 0x72, 0x80, 0x2e, 0xd4, 0xfc, 0x41, 0xc0, 0x62, 0x62, 0xe1, 0x11, 0x34, 0x7a, 0x2c,
	0x8c, 0xc3, 0x9e, 0x3f, 0x20, 0x76, 0xf1, 0x11, 0x30, 0x36, 0x62, 0xa4, 0x82, 0x87, 0x50, 0xff,
	0xed, 0xb3, 0x28, 0x8c, 0xfa, 0xa4, 0x8a, 0x00, 0x4e, 0x34, 0x8a, 0xc3, 0x5e, 0x40, 0x6a, 0x78,
	0x02, 0xcd, 0x30, 0xba, 0x1b, 0xb1, 0xa1, 0x1f, 0x87, 0xa3, 0xc8, 0x1f, 0x10, 0xa7, 0x18, 0xbb,
	0x0d, 0x7e, 0xdc, 0xf7, 0x49, 0xfd, 0xea, 0xe3, 0xae, 0xd2, 0xc2, 0x60, 0xfc, 0x30, 0xee, 0xf9,
	0x83, 0x01, 0x39, 0x28, 0x02, 0xfc, 0xbc, 0x19, 0x4f, 0xfc, 0xfb, 0xdb, 0x30, 0x26, 0x56, 0x37,
	0x7e, 0x77, 0x4b, 0x19, 0x57, 0x6b, 0x31, 0xe7, 0xf8, 0x0d, 0xdc, 0x2c, 0x9f, 0x65, 0x73, 0x25,
	0x66, 0x1c, 0xcf, 0xe8, 0xbe, 0x7b, 0x6b, 0x9d, 0xef, 0x2f, 0xf4, 0xb3, 0x35, 0x73, 0xcc, 0x3d,
	0x7c, 0xf9, 0x17, 0x00, 0x00, 0xff, 0xff, 0xab, 0x7f, 0xfb, 0x4d, 0xdf, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FalcoOutputServiceClient is the client API for FalcoOutputService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FalcoOutputServiceClient interface {
	Subscribe(ctx context.Context, in *FalcoOutputRequest, opts ...grpc.CallOption) (FalcoOutputService_SubscribeClient, error)
}

type falcoOutputServiceClient struct {
	cc *grpc.ClientConn
}

func NewFalcoOutputServiceClient(cc *grpc.ClientConn) FalcoOutputServiceClient {
	return &falcoOutputServiceClient{cc}
}

func (c *falcoOutputServiceClient) Subscribe(ctx context.Context, in *FalcoOutputRequest, opts ...grpc.CallOption) (FalcoOutputService_SubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FalcoOutputService_serviceDesc.Streams[0], "/falco_output_service/subscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &falcoOutputServiceSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FalcoOutputService_SubscribeClient interface {
	Recv() (*FalcoOutputResponse, error)
	grpc.ClientStream
}

type falcoOutputServiceSubscribeClient struct {
	grpc.ClientStream
}

func (x *falcoOutputServiceSubscribeClient) Recv() (*FalcoOutputResponse, error) {
	m := new(FalcoOutputResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FalcoOutputServiceServer is the server API for FalcoOutputService service.
type FalcoOutputServiceServer interface {
	Subscribe(*FalcoOutputRequest, FalcoOutputService_SubscribeServer) error
}

// UnimplementedFalcoOutputServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFalcoOutputServiceServer struct {
}

func (*UnimplementedFalcoOutputServiceServer) Subscribe(req *FalcoOutputRequest, srv FalcoOutputService_SubscribeServer) error {
	return status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}

func RegisterFalcoOutputServiceServer(s *grpc.Server, srv FalcoOutputServiceServer) {
	s.RegisterService(&_FalcoOutputService_serviceDesc, srv)
}

func _FalcoOutputService_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FalcoOutputRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FalcoOutputServiceServer).Subscribe(m, &falcoOutputServiceSubscribeServer{stream})
}

type FalcoOutputService_SubscribeServer interface {
	Send(*FalcoOutputResponse) error
	grpc.ServerStream
}

type falcoOutputServiceSubscribeServer struct {
	grpc.ServerStream
}

func (x *falcoOutputServiceSubscribeServer) Send(m *FalcoOutputResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _FalcoOutputService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "falco_output_service",
	HandlerType: (*FalcoOutputServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "subscribe",
			Handler:       _FalcoOutputService_Subscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "falco_output.proto",
}
